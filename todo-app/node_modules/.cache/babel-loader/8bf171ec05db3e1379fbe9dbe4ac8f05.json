{"ast":null,"code":"import _defineProperty from \"/home/kietgom/Learn/LearnReact/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kietgom/Learn/LearnReact/todo-app/src/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./TodoList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = () => {\n      this.setState(preState => {\n        return {\n          newTodo: {},\n          todos: [...preState.todos, this.state.newTodo]\n        };\n      });\n    };\n\n    this.handleRemove = id => {\n      let newState = [];\n\n      for (let i = 0; i < this.state.todos.length; i++) {\n        if (i === id) {\n          continue;\n        }\n\n        newState = [...newState, this.state.todos[i]];\n      }\n\n      this.setState(() => {\n        return {\n          newTodo: _objectSpread({}, this.state.newTodo),\n          todos: [...newState]\n        };\n      });\n    };\n\n    this.handleChange = e => {\n      let newTodo = {\n        id: this.state.newTodo.id,\n        name: this.state.newTodo.name,\n        description: this.state.newTodo.description\n      };\n\n      if (e.target.name === \"name\") {\n        newTodo.name = e.target.value;\n      } else {\n        newTodo.description = e.target.value;\n      }\n\n      this.setState(() => {\n        return {\n          newTodo: _objectSpread({}, newTodo),\n          todos: [...this.state.todos]\n        };\n      });\n    };\n\n    this.state = {\n      newTodo: {},\n      todos: [{\n        id: 0,\n        name: \"One\",\n        description: \"Description for One\"\n      }, {\n        id: 1,\n        name: \"Two\",\n        description: \"Description for Two\"\n      }, {\n        id: 2,\n        name: \"Three\",\n        description: \"Description for Three\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      onChange: e => this.handleChange(e),\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Name\")), React.createElement(\"div\", {\n      className: \"inputBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"description\",\n      name: \"description\",\n      onChange: e => this.handleChange(e),\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Description\")), React.createElement(\"button\", {\n      onClick: () => this.handleAdd(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(TodoList, {\n      onRemove: id => this.handleRemove(id),\n      todos: this.state.todos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kietgom/Learn/LearnReact/todo-app/src/App.tsx"],"names":["React","TodoList","App","Component","constructor","props","handleAdd","setState","preState","newTodo","todos","state","handleRemove","id","newState","i","length","handleChange","e","name","description","target","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./TodoList\";\nimport { TodoType } from \"./types\";\n\ninterface IProps {}\n\ninterface IState {\n  todos: Array<TodoType>;\n  newTodo: TodoType;\n}\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      newTodo: {},\n      todos: [\n        {\n          id: 0,\n          name: \"One\",\n          description: \"Description for One\"\n        },\n        {\n          id: 1,\n          name: \"Two\",\n          description: \"Description for Two\"\n        },\n        {\n          id: 2,\n          name: \"Three\",\n          description: \"Description for Three\"\n        }\n      ]\n    };\n  }\n  handleAdd = (): void => {\n    this.setState(preState => {\n      return {\n        newTodo: {},\n        todos: [...preState.todos, this.state.newTodo]\n      };\n    });\n  };\n  handleRemove = (id: number): void => {\n    let newState: Array<TodoType> = [];\n    for (let i = 0; i < this.state.todos.length; i++) {\n      if (i === id) {\n        continue;\n      }\n      newState = [...newState, this.state.todos[i]];\n    }\n\n    this.setState(\n      (): IState => {\n        return {\n          newTodo: { ...this.state.newTodo },\n          todos: [...newState]\n        };\n      }\n    );\n  };\n  handleChange = (e: any) => {\n    let newTodo: TodoType = {\n      id: this.state.newTodo.id,\n      name: this.state.newTodo.name,\n      description: this.state.newTodo.description\n    };\n\n    if (e.target.name === \"name\") {\n      newTodo.name = e.target.value;\n    } else {\n      newTodo.description = e.target.value;\n    }\n    this.setState(\n      (): IState => {\n        return {\n          newTodo: { ...newTodo },\n          todos: [...this.state.todos]\n        };\n      }\n    );\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"box\">\n          <div className=\"inputBox\">\n            <input\n              id=\"name\"\n              name=\"name\"\n              onChange={e => this.handleChange(e)}\n              type=\"text\"\n              required\n            />\n            <label htmlFor=\"name\">Name</label>\n          </div>\n          <div className=\"inputBox\">\n            <input\n              id=\"description\"\n              name=\"description\"\n              onChange={e => this.handleChange(e)}\n              type=\"text\"\n              required\n            />\n            <label htmlFor=\"description\">Description</label>\n          </div>\n          <button onClick={() => this.handleAdd()}>+</button>\n        </div>\n        <div className=\"container\">\n          <TodoList\n            onRemove={id => this.handleRemove(id)}\n            todos={this.state.todos}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}